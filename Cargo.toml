[package]
name = "sqlweld"
version = "0.1.3"
edition = "2021"
authors = ["Daniel Imfeld <dimfeld>"]
description = "Create SQL files from templates and partials"
readme = "README.md"
repository = "https://github.com/dimfeld/sqlweld"
license = "MIT OR Apache-2.0"
categories = ["command-line-utilities", "database", "template-engine"]

[lib]
name = "sqlweld"
path = "src/lib.rs"

[dependencies]
clap = { version = "4.4.8", features = ["derive"] }
error-stack = { version = "0.4.1" }
flume = { version = "0.11.0", default-features = false, features = ["nanorand"] }
ignore = "0.4.20"
itertools = "0.12.0"
liquid = "0.26.4"
rayon = "1.8.0"
thiserror = "1.0.50"

[dev-dependencies]
tempfile = "3.8.1"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.4.3"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell", "npm", "homebrew"]
# A GitHub repo to push Homebrew formulas to
tap = "dimfeld/homebrew-tap"
# Target platforms to build apps for (Rust target-triple syntax)
targets = ["x86_64-unknown-linux-gnu", "aarch64-apple-darwin", "x86_64-apple-darwin", "x86_64-pc-windows-msvc"]
# The archive format to use for windows builds (defaults .zip)
windows-archive = ".tar.gz"
# The archive format to use for non-windows builds (defaults .tar.xz)
unix-archive = ".tar.gz"
# Publish jobs to run in CI
publish-jobs = ["homebrew"]
# Publish jobs to run in CI
pr-run-mode = "plan"
